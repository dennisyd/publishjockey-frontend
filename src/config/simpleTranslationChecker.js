// Simple translation checker for all 55 languages
const allLanguageCodes = ['bn', 'cs', 'da', 'de', 'el', 'en', 'es', 'et', 'fi', 'fr', 'gl', 'gu', 'ha', 'hi', 'hr', 'hu', 'id', 'ig', 'is', 'it', 'ki', 'kn', 'lg', 'lt', 'lv', 'mg', 'mk', 'ml', 'ms', 'nl', 'no', 'or', 'pa', 'pl', 'pt', 'rn', 'ro', 'ru', 'rw', 'sk', 'sl', 'sn', 'sr', 'st', 'sv', 'sw', 'ta', 'te', 'tl', 'tn', 'tr', 'vi', 'xh', 'yo', 'zu'];

// Backend TOC translations (from translations.js)
const tocTranslations = {
  'en': 'Table of Contents',
  'es': 'Tabla de Contenidos', 
  'fr': 'Table des Mati√®res',
  'de': 'Inhaltsverzeichnis',
  'it': 'Indice',
  'id': 'Daftar Isi',
  'ru': '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ',
  'ro': 'Cuprins',
  'hi': '‡§µ‡§ø‡§∑‡§Ø ‡§∏‡•Ç‡§ö‡•Ä',
  'ar': 'ÿ¨ÿØŸàŸÑ ÿßŸÑŸÖÿ≠ÿ™ŸàŸäÿßÿ™',
  'ta': '‡Æ™‡Øä‡Æ∞‡ØÅ‡Æ≥‡Æü‡Æï‡Øç‡Æï‡ÆÆ‡Øç',
  'hr': 'Sadr≈æaj',
  'cs': 'Obsah',
  'da': 'Indhold',
  'nl': 'Inhoudsopgave',
  'et': 'Sisukord',
  'fi': 'Sis√§llysluettelo',
  'gl': '√çndice',
  'el': 'Œ†ŒµœÅŒπŒµœáœåŒºŒµŒΩŒ±',
  'ha': 'Teburin Abubuwa',
  'hu': 'Tartalomjegyz√©k',
  'is': 'Efnisyfirlit',
  'ig': 'Ndep·ª•ta Isiokwu',
  'ki': 'Orodha ya Maudhui',
  'lt': 'Turinys',
  'lg': 'Ennyiriza',
  'lv': 'Saturs',
  'mk': '–°–æ–¥—Ä–∂–∏–Ω–∞',
  'mg': 'Tafiditra',
  'ms': 'Jadual Kandungan',
  'no': 'Innhold',
  'pl': 'Spis Tre≈õci',
  'pt': 'Sum√°rio',
  'rn': 'Orodha ya Maudhui',
  'rw': 'Orodha ya Maudhui',
  'sl': 'Kazalo',
  'sk': 'Obsah',
  'sn': 'Mazita ezvinyorwa',
  'sr': 'Sadr≈æaj',
  'st': 'Tafole ea Likahare',
  'sv': 'Inneh√•llsf√∂rteckning',
  'tn': 'Tafole ya Dikahare',
  'tr': 'ƒ∞√ßindekiler',
  'xh': 'Uluhlu Lweziqulatho',
  'yo': 'At·ªçka',
  'vi': 'M·ª•c L·ª•c',
  'zu': 'Isiqephu',
  'bn': '‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ',
  'gu': '‡™µ‡™ø‡™∑‡™Ø ‡™Ø‡™æ‡™¶‡´Ä',
  'te': '‡∞µ‡∞ø‡¶∑‡∞Ø ‡¶∏‡ßÇ‡¶ö‡¶ø',
  'kn': '‡≤µ‡≤ø‡≤∑‡≤Ø ‡≤∏‡≥Ç‡≤ö‡≤ø',
  'ml': '‡¥µ‡¥ø‡¥∑‡¥Ø ‡¥∏‡µÇ‡¥ö‡¥ø‡¥ï',
  'pa': '‡®µ‡®ø‡®∏‡®º‡©á ‡®¶‡©Ä ‡®∏‡©Ç‡®ö‡©Ä',
  'or': '‡¨¨‡¨ø‡¨∑‡≠ü ‡¨§‡¨æ‡¨≤‡¨ø‡¨ï‡¨æ',
  'sw': 'Jedwali la Yaliyomo',
  'tl': 'Talaan ng mga Nilalaman'
};

console.log('üß™ TRANSLATION CHECK FOR ALL 55 LANGUAGES');
console.log('='.repeat(60));

const missingToc = [];
const presentToc = [];

allLanguageCodes.forEach((code, index) => {
  const num = (index + 1).toString().padStart(2, '0');
  const translation = tocTranslations[code];
  
  if (code === 'en') {
    // English is the fallback language - it should return 'Table of Contents'
    console.log(`${num}. ‚úÖ ${code}: "Table of Contents" (fallback)`);
    presentToc.push(code);
  } else if (translation && translation !== 'Table of Contents') {
    console.log(`${num}. ‚úÖ ${code}: "${translation}"`);
    presentToc.push(code);
  } else {
    console.log(`${num}. ‚ùå ${code}: MISSING TOC TRANSLATION`);
    missingToc.push(code);
  }
});

console.log('\n' + '='.repeat(60));
console.log('üìä RESULTS SUMMARY');
console.log('='.repeat(60));
console.log(`Total Languages: ${allLanguageCodes.length}`);
console.log(`‚úÖ TOC Translations Present: ${presentToc.length}`);
console.log(`‚ùå TOC Translations Missing: ${missingToc.length}`);
console.log(`üìà Success Rate: ${((presentToc.length / allLanguageCodes.length) * 100).toFixed(1)}%`);

if (missingToc.length > 0) {
  console.log(`\n‚ùå MISSING TOC TRANSLATIONS:`);
  console.log(`   ${missingToc.join(', ')}`);
  
  console.log(`\nüìù QUICK FIX - Add these to translations.js:`);
  missingToc.forEach(code => {
    console.log(`   '${code}': 'TABLE_OF_CONTENTS_IN_${code.toUpperCase()}',`);
  });
}

console.log(`\nüîç Next: Check frontend sidebar translations in bookStructureLocalization.ts`);
console.log(`     Look for: sectionNames object with ${allLanguageCodes.length} language entries`);

module.exports = { allLanguageCodes, missingToc, presentToc };
